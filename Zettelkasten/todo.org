* Projekte
** TODO Emacs Config Aufräumen                                      :PROJECT:
*** NEXT überflüssige keymapping dateien entfernen
*** TODO nicht mehr benutzte dateien in .emacs.d löschen
*** TODO alle shortcuts in .emacs zusammenfassen
*** DONE funktionen in .emacs auslagern
    CLOCK: [2013-01-14 Mo 19:59]--[2013-01-14 Mo 20:11] =>  0:12
*** TODO unnötige keybindings entfernen
*** DONE in bytecompiling einlesen
*** DONE alles bytecompilen
** TODO Org-Mode Bilder						    :PROJECT:
*** NEXT Möglichkeiten prüfen um informationen/texte einem konkreten Header zuzuordnen
*** TODO Möglichkeiten sammeln, zum zeilenweisen auslesen und splitten bei trennzeichene
*** TODO beim link erstellen eben jene information in extra ast unterbringen
*** TODO 2. löschenroutine, welche nach dem löschen eben diesen wert wieder ausliest
*** DONE Funktion bzw. Regex um links und die darin enthaltenen Bilder zu identifizieren
    \\[\\[\\(.*\\)\\]\\]  catched die links
    search-forward-regexp such entsprechend
    matched-string holt die einzelnen werte der letzten suche 
       (parameter 1 für die erste gruppe) oder 0 für ganzen string
    (goto-char (match-end 0))  um anfang und ende von link zu erreichen
    
(defun my-org-extract-link ()
  "Extract the link location at point and put it on the killring."
  (interactive)
  (when (org-in-regexp org-bracket-link-regexp 1)
    (kill-new (org-link-unescape (org-match-string-no-properties 1)))))

*** DONE Deletion Funktion für das Bild unter dem Cursor hinzufügen, falls slice, dann alle anderen slices finden
*** DONE Möglichkeiten nachträgliches resizen der Bilder im Org-Mode eruieren
    - macht innerhalb vom Orgmode bisher einfach keinen Sinn
*** DONE prüfen ob Bilder mit Linktext immernoch dargestellt werden, falls nicht, konfigurieren
*** DONE latex code in die linkbeschreibung pasten, klammern entsprechend entwerten
*** DONE extra Fenster bei Latexumwandlung unterdrücken; google save-excursion
*** DONE iimage bibliothek o.ä. code raussuchen und auf anpassparkeit prüfen
*** DONE anforderungen an eigenen Modus sammeln
*** DONE entsprechenden modus entwickeln ;image slicing
** TODO Musik Player Einrichten					    :PROJECT:
*** NEXT google awesome-wm automount Ziel: Festplatte unter festem Namen mounten
*** TODO Playlists zusammenstellen und in einem Ordner verlinken
*** TODO Org Mode links für emms möglichkeit suchen
*** TODO alternative: Helm (/Anything) emms suchen und benutzen
** TODO Tags							    :PROJECT:
*** DONE etags installieren
*** NEXT google: wie können tags zu den unterschiedlichen dokumentarten generiert werden
*** TODO google: welche navigations und sammelmöglichkeiten gibt es?
*** TODO Shortcuts für die Tags entsprechend legen
** TODO Capturing						    :PROJECT:
*** NEXT welche Captures ;-Templates; würden noch Sinn machen? Broweser/Client
*** DONE schnellere Shortcuts für Captures 
*** TODO Captures entsprechend implementieren
** TODO Shortcuts						    :PROJECT:
*** NEXT welche Snippets machen noch Sinn? -> einbauen
*** DONE shortcuts für scrolling in pentadactyl ummappen
*** DONE verschieben/retaggen von Fenstern in awesom wm
*** DONE mehr Tasten auf den Modalen Vim Modus setzen
*** DONE Firefox Zwang auf web lösen
*** DONE completion shortcuts bequemer machen			  :shortcuts:
*** DONE Orte mit -letzten- veränderungen oder sowas durchgehen; cyclen - plural
*** DONE shortcut für zuletzt benutztes bookmark		  :shortcuts:
*** DONE Shortcut Header Sprung besser legen			   :shortcut:
*** DONE Emacs wiederholung braucht ein besseres shortcut; z schwer zu finden :shortcut:
*** DONE zyklisches Pasten von Emacs aus Killring		  :shortcuts:
*** DONE shortcuts für erstellen von tmp autonamed bookmark und cyclen; in buffer :shortcuts:
** TODO Sprungmarken						    :PROJECT:
*** TODO Liste mit Features von Bookmark+ anfertigen
*** NEXT markierung und/oder anzeige für evil marks im Dokument anzeige ;goggle
nicht mehr zeit verschwenden, als unbedingt nötig, da die evil marks in jedem fall auch
durch autobookmarks ersetzt werden könnten
google: emacs+evil+show+mark 
** TODO TodoListe optimieren					    :PROJECT:
*** TODO Brainstorming, was Standardmäßig geöffnet und was geschlossen sein soll
*** TODO autostarts neu zuteilen ;source blöcke usw.
*** NEXT todo states und faces aus "your life in plaintext"
** TODO Latex Mode						    :PROJECT:
*** DONE Cdlatex Paket suchen und installieren
    ist total sinnlos, yasnippet kann das alles auch. Statt dessen eher mal nach math mode suchen
*** DONE testen in wie fern schnelles suchen und finden von Symbolen möglich ist
    - mit latex math mode lässt sich mit backtick
      und dann nem normalen Zeichen das latex äquivalent bilden
    z.B. * wird zu \times
    - für andere Zeichen gibt es helm-c-insert-latex
*** NEXT testen wie weit auto completion von viel genutzen symbolen -Rightarrow...- glatt läuft
   - man könnte natürlich yasnippet benutzen 
   - oder man schreibt eigene latex kürzel
*** TODO math mode und insert latex in workflow einbinden
*** TODO gegebenenfalls weitere Completion Methoden einsetzen
** TODO Git							    :PROJECT:
*** DONE die 3 Grundmerges finden ;a / b / beide
*** NEXT magit: commit und push?
** TODO effizienteres Suchen					    :PROJECT:
*** NEXT Suchmaschine für Quellcodes
*** TODO alternative rc.lua suchen
*** TODO alternative .emacs suchen
*** TODO alternativen zu google prüfen / bessere Befehle sammeln
** TODO awesome wm						    :PROJECT:
*** NEXT Titlebar Awesome Wm googlen. Ziel: Titlebars in bestimmten Tags mit Floating standard, aktivieren.
*** TODO ansatz für tabs in awesome wm formulieren
*** TODO testen was genau shifty macht, und das gegebenenfalls einrichten
*** TODO nochmal die awesomewm konfiguration für tab's raussuchen und versuchen einen Plan zu entwickeln, um dieses sicher zu implementieren
** TODO eshell 							    :PROJECT:
*** DONE Autocompletion Eshell googlen Ziel: Möglichkeit umzuschalten. Vielleicht andere Shortcuts?
*** DONE Autocompletion eshell fixen im moment wird bei tab direkt eingesetzt und es lässt sich nicht weiter schalten
*** NEXT mehrere eshell's, und diese sollten auch von überall aus in einem separaten Frame geöffnet werden können
** TODO someday / maybe						    :PROJECT:
*** NEXT Acejump näher betrachten
*** TODO ubuntu vs mint akku genau das bei google
*** TODO regex icicle und rx makro testen
*** TODO gnome keyring bug beheben
*** TODO festplatten automatisch laden 
*** TODO Netbook neu einrichten
- brainstorming, xorg (wieder) automatisch booten (google startx)
* TODO interessanter Kram					    :PROJECT:
** NEXT tiling windowmanager
*** notion wm / stump wm
*** euclid wm
*** lunchbox wm 
    hat z.B. alternativen ansatz für tabs
*** plwm
    toolkit um mit python nen windowmanager zu entwickeln

*** clfswm -kein reiner tiling manager, dafür common lisp-
*** xwem
** TODO tiling in non tiling window managern - software -
   z.B. in fluxbox - +tabs -
*** stiler
*** pytyle
*** wumwum 
    - eher weniger verlocend im moment
*** PyWO
** TODO im alten my-keymaps sehen, was noch an plugins benutzt wurde
** TODO ubiquity
   einfach mal testen

** TODO weitere pentadactyl shortcuts/befehle
** TODO vimperator addons sammeln
   - sieht bei denen eigentlich auch nicht anders aus (offizielle google code site)
   - die Zeichen sind da aber ganz gut hervorgehoben
** TODO slime installieren und einrichten
* TODO Todo-Eingang						    :PROJECT:
** TODO prüfen: https://github.com/dgutov/point-stack/blob/master/point-stack.el
** NEXT http://sachachua.com/blog/2013/01/emacs-org-display-projects-with-a-few-subtasks-in-the-agenda-view/ lesen
** TODO .emacs Datei splitten mit org-babel-load-file in kategorien
** TODO den offset beim letzten Bildfragment fixen
** TODO bookmarks für neue todo's beseitigen
** TODO alternative Tex Konverter testen
* TODO Todo-Eingang-Studium					    :PROJECT:
** TODO Stochastik Aufgabe 2 zusammentragen
[[file:~/Zettelkasten/zettelkasten.org::st-09-2][aufgabenlink]]
** TODO Stochastik Aufgabe 3 planen
[[file:~/Zettelkasten/zettelkasten.org::st-09-3][aufgabenlink]]
** TODO Stochastik Aufgabe 4 planen
[[file:zettelkasten.org::st-09-4][aufgabenlink]]
** DONE Induktionsformalitäten neu sortieren
   - State "DONE"       from "NEXT"       [2013-01-22 Di 02:16]
 [[file:~/Zettelkasten/zettelkasten.org::FIXME%20th11.1][file:~/Zettelkasten/zettelkasten.org::FIXME th11.1]]
 Entered on [2013-01-16 Mi 14:10]
** DONE Versuchen, die primitive Rekursivität in Bezug zu bringen
   - State "DONE"       from "TODO"       [2013-01-22 Di 02:16]
 [[file:~/Zettelkasten/zettelkasten.org::FIXME%20th11.2][file:~/Zettelkasten/zettelkasten.org::FIXME th11.2]]
 Entered on [2013-01-16 Mi 14:56]
** DONE Fehler mit der vergessenen 0 beheben
   - State "DONE"       from "NEXT"       [2013-01-18 Fr 18:12]
 [[file:~/Zettelkasten/zettelkasten.org::FIXME%20th11.3][file:~/Zettelkasten/zettelkasten.org::FIXME th11.3]]
 Entered on [2013-01-16 Mi 15:29]

 passt jetzt, alle anderen müssen übriegens auch noch größer als 0 sein
 ungerade Zahlen werden aber noch nicht erfasst
** DONE schnelles googlen ob es keinen besseren Weg fürs Filtern ungerader Zahlen gibt.
   - State "DONE"       from "NEXT"       [2013-01-22 Di 02:16]
 [[file:~/Zettelkasten/zettelkasten.org::FIXME%20th11.3][file:~/Zettelkasten/zettelkasten.org::FIXME th11.3]]
** DONE Formalitäten zur vollständigen Induktion sammeln und Fehler beheben
   - State "DONE"       from "NEXT"       [2013-01-22 Di 02:17]
 [[file:zettelkasten.org::FIXME%20th11.1][file:~/Zettelkasten/zettelkasten.org::FIXME th11.1]]
** DONE abkürzungsdatei auch in tex-file einbinden
   - State "DONE"       from "TODO"       [2013-01-22 Di 02:17]
** DONE maximum likelihood schätzer
   - State "DONE"       from "TODO"       [2013-01-22 Di 02:17]
 [[file:~/Zettelkasten/zettelkasten.org::*W%C3%B6rterbuch][Wörterbuch]]
 Entered on [2013-01-17 Do 12:30]
** DONE empirischer Erwartungswert / Varianz / erwartungstreue
   - State "DONE"       from "TODO"       [2013-01-22 Di 02:17]
 [[file:~/Zettelkasten/zettelkasten.org::*W%C3%B6rterbuch][Wörterbuch]]
 Entered on [2013-01-17 Do 12:31]
** DONE negative Binomialverteilung / Pascalverteilung
   - State "DONE"       from "TODO"       [2013-01-22 Di 02:17]
 [[file:~/Zettelkasten/zettelkasten.org::*W%C3%B6rterbuch][Wörterbuch]]
 Entered on [2013-01-17 Do 12:32]
* Todo Ausgang
** DONE gnus wieder für die mails einrichten
** DONE git: leere commits abschicken
** DONE AwesomeWm Shortcuts
*** DONE Ein/Ausblenden von Fenstern logischer legen
*** DONE jeweils recent Sprung für Fenster und tag (awesomewm)
    - im Moment win+escape und win+tab aber das geht auch besser
** DONE Keynav überprüfen (als Lösung für Screenshots)
   - rodentbane ist keynav, allerdings wurde das teil 
     komplett portiert, abhängigkeit ist nur zu allgemeineren
     tools gegeben
   => erweiterbarkeit sollte kein probem werden.
   siehe dazu: http://www.semicomplete.com/projects/xdotool/xdotool.xhtml
   mouse->keyup/keydown
   und [[~/.config/awesome/rodentbane.lua::function click(button)]]
** DONE tabbed untersuchen
   - eher unschön das ganze
** DONE Screenshots per Tastatur
** DONE flosub mit leertaste arbeiten lassen
** DONE Weiterspringen und besseres Shortcut für Regex Sprung
** DONE zusätzliche foldingsyntax / elemente einführen?
   vor allem kürzer als diese begin, end dinger
** DONE die Regex ausdrücke für Preview Latex in Org überarbeiten abstände zu $ sind scheiße
** DONE effizientere Wege überlegen, um Ordner zu erreichen
=======
** DONE Keynav synchronisieren
** DONE Übersicht in Software zu den verschiedenen Vim Substitutionen erstellen
